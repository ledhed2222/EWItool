/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // JavaFX
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    mainClass = 'com.gregweisbrod.ewitool.Main'
}

javafx {
    version = '14'
    modules = [ 'javafx.graphics', 'javafx.controls' ]
}

jar {
    manifest {
        attributes 'Main-Class': 'com.gregweisbrod.ewitool.Main'
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

def appName = 'EWITool2'

task jpackage(type: Exec) {
    dependsOn 'clean'
    dependsOn 'fatJar'
    commandLine 'jpackage',
            '--input', 'build/',
            '--dest', 'build/',
            '--name',  "${appName}",
            '--main-jar', 'libs/EWItool-all.jar',
            '--type', 'dmg',
            '--verbose',
            '--icon', 'build/resources/main/EWItool2.icns'
}